# Generated by Django 4.2.9 on 2025-03-30 13:57

from django.db import migrations
from django.db import connection


def add_moderation_fields(apps, schema_editor):
    """Add moderation fields to tables if they don't exist"""
    with connection.cursor() as cursor:
        # Check Post table
        cursor.execute("PRAGMA table_info('chat_post')")
        columns = [info[1] for info in cursor.fetchall()]
        if 'is_moderated' not in columns:
            cursor.execute("ALTER TABLE chat_post ADD COLUMN is_moderated BOOLEAN DEFAULT 0")
        if 'moderation_passed' not in columns:
            cursor.execute("ALTER TABLE chat_post ADD COLUMN moderation_passed BOOLEAN DEFAULT 1")
            
        # Check PostImage table
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='chat_postimage'")
        if cursor.fetchone():
            cursor.execute("PRAGMA table_info('chat_postimage')")
            columns = [info[1] for info in cursor.fetchall()]
            if 'is_moderated' not in columns:
                cursor.execute("ALTER TABLE chat_postimage ADD COLUMN is_moderated BOOLEAN DEFAULT 0")
            if 'moderation_passed' not in columns:
                cursor.execute("ALTER TABLE chat_postimage ADD COLUMN moderation_passed BOOLEAN DEFAULT 1")
            
        # Check PostVideo table
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='chat_postvideo'")
        if cursor.fetchone():
            cursor.execute("PRAGMA table_info('chat_postvideo')")
            columns = [info[1] for info in cursor.fetchall()]
            if 'is_moderated' not in columns:
                cursor.execute("ALTER TABLE chat_postvideo ADD COLUMN is_moderated BOOLEAN DEFAULT 0")
            if 'moderation_passed' not in columns:
                cursor.execute("ALTER TABLE chat_postvideo ADD COLUMN moderation_passed BOOLEAN DEFAULT 1")
            
        # Check Message table
        cursor.execute("PRAGMA table_info('chat_message')")
        columns = [info[1] for info in cursor.fetchall()]
        if 'is_image_moderated' not in columns:
            cursor.execute("ALTER TABLE chat_message ADD COLUMN is_image_moderated BOOLEAN DEFAULT 0")
        if 'image_moderation_passed' not in columns:
            cursor.execute("ALTER TABLE chat_message ADD COLUMN image_moderation_passed BOOLEAN DEFAULT 1")
        if 'is_video_moderated' not in columns:
            cursor.execute("ALTER TABLE chat_message ADD COLUMN is_video_moderated BOOLEAN DEFAULT 0")
        if 'video_moderation_passed' not in columns:
            cursor.execute("ALTER TABLE chat_message ADD COLUMN video_moderation_passed BOOLEAN DEFAULT 1")


def reverse_migration(apps, schema_editor):
    """This migration cannot be reversed easily in SQLite as it doesn't support DROP COLUMN"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0007_remove_message_image_moderation_passed_and_more'),
    ]

    operations = [
        migrations.RunPython(add_moderation_fields, reverse_migration),
    ]
